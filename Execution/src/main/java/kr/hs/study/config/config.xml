<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd">
	           
	           
     <bean id="t1" class="kr.hs.study.beans.TestBean1"/>
     <bean id="t2" class="kr.hs.study.beans.TestBean2"/>
     <bean id="t3" class="kr.hs.study.beans.TestBean3"/>
	 <bean id="advisor" class="kr.hs.study.advice.AdvisorClass"/> 
	          
	 <aop:config> 
	 	<aop:aspect ref="advisor"> 
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , 매개변수 없음-->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1())"/>
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , int 매개변수 1개-->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(int))"/>
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , string 매개변수 1개-->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(String))"/>	 	
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , 모든타입 매개변수 -->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(*))"/> 	
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , int 매개변수 2개-->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(int, int))"/>
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , int 매개변수 1개/String 매개변수 1개-->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(int, String))"/>
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , 모든타입 매개변수 2개-->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(*, *))"/>
	 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, method1 메서드 , 모든타입 매개변수 0개 이상-->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.method1(..))"/>
	 		 	
	 	<!-- 리턴타입 없음, kr.hs.study.beans.TestBean1 클래스, 모든 메서드 -->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.TestBean1.*(..))"/>
	 	
 		<!-- 리턴타입 없음, kr.hs.study.beans 패키지의 모든 클래스, method1 메서드 -->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.*.method1(..))"/>
	 	
 		<!-- 리턴타입 없음, kr.hs.study.beans 패키지의 모든 클래스, 모든 메서드 -->
	 	<aop:pointcut id="point" expression="execution(void kr.hs.study.beans.*.*(..))"/>
	 	
	 	<!-- 리턴타입 없음, 모든 패키지의 모든 클래스, 모든 메서드  (모든 패키지의 모든 메서드는 * 하나로 묶어도 ok) -->
	 	<aop:pointcut id="point" expression="execution(void *.*(..))"/>
	 	
	 	<!-- 리턴타입 int, 모든 패키지의 모든 클래스, 모든 메서드  (모든 패키지의 모든 메서드는 * 하나로 묶어도 ok) -->
	 	<aop:pointcut id="point" expression="execution(int *.*(..))"/>
	 	
	 	<!--모든 리턴타입, 모든 패키지의 모든 클래스, 모든 메서드  (모든 패키지의 모든 메서드는 * 하나로 묶어도 ok) -->
	 	<aop:pointcut expression="execution(* *.*(..))" id="point"/>
	 	
	 	<!--모든 리턴타입, 모든 패키지의 모든 클래스, method로 시작하는 모든 메서드 -->
	 	<aop:pointcut expression="execution(* *.method*(..))" id="point"/> <!-- method로 끝나는 모든 메서드 (method*(..)) -->
	 	
	 	
	 	<aop:before method="beforeMethod" pointcut-ref="point"/>
	 	
	 	</aop:aspect>
	 </aop:config>
	         
</beans>