4/18일 Spring 수업 정리

<< AOP(Aspect-Oriented Programming : 관점 지향 프로그래밍)
 - 관심사: 메서드 호출
 - 관심사가 호출되는지 지켜보다가 특정 메서드가 호출되면 자동으로 메서드 전과 후에 다른 메서드가 호출되도록 한다
 
 ex) '시작' 출력 -> 메서드 실행 -> '끝' 출력  >> 이러한 로직을 만들고 싶다 하였을 때,
     보통은 개발자가 시작 출력, 메서드 실행, 끝 출력을 전부 하지만.
     Spring은 개발자가 전/후에 출력하라 설정하고, 메서드만 호출하면 자동으로 시작/끝을 출력해준다


 [ 용어 ]
 1. 횡단관심(cross cutting concerm): 트랜잭션, 로깅, 예외, 주석 등에 사용
 2. 핵심관심(core concerm) : 실제 실행되는 비즈니스 로직
 3. joint point : 관심을 받을 가능성이 있는 메서드들
 4. pointcut : 관심을 받을 메서드
 5. advice : pointcut에 삽입되어 동작할 수 있는 코드
 6. advisor : advice를 가지고 있는 것
 7. weaving : advice를 핵심로직 코드에 적용하는 과정
 8. target class : 충고를 받을 클래스 
 9. aspect : 횡단관심을 aspect 라는 모듈형태로 만들어서 개발한 것


 [ 만드는 순서 ]
 1. 횡단 관심사(advice) 만들고 aspect에 모듈로 등록
 2. pointcut 설정
 3. 1,2번 연결


<< AOP 필요 라이브러리
 - spring-aop
 - aspectj weaver
 - aspectjtools